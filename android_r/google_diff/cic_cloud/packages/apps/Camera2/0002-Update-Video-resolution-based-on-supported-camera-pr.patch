From 43efac420f0292ae4662c4a1ef5402e101881235 Mon Sep 17 00:00:00 2001
From: Jeevaka Prabu Badrappan <jeevaka.badrappan@intel.com>
Date: Mon, 2 Aug 2021 17:20:46 +0530
Subject: [PATCH] Update Video resolution based on supported camera preview
 size

Camera app is providing the video resolution list based on
Camcorder profile irrespective of camera resolution support.

Update the video resolution list based on supported camera
preview size and Camcorder profile.

Change-Id: Ifa5afbd0b502f861b5f5cce4c967e7ce66c7645a
Tracked-On: OAM-99725
Signed-off-by: Jeevaka Prabu Badrappan <jeevaka.badrappan@intel.com>
---
 .../android/camera/settings/SettingsUtil.java | 61 ++++++++++++++++++-
 1 file changed, 60 insertions(+), 1 deletion(-)

diff --git a/src/com/android/camera/settings/SettingsUtil.java b/src/com/android/camera/settings/SettingsUtil.java
index f83fb8bcd..369539716 100644
--- a/src/com/android/camera/settings/SettingsUtil.java
+++ b/src/com/android/camera/settings/SettingsUtil.java
@@ -24,6 +24,12 @@ import android.media.CamcorderProfile;
 import android.util.SparseArray;
 
 import com.android.camera.debug.Log;
+import com.android.camera.device.CameraId;
+import com.android.camera.one.OneCamera;
+import com.android.camera.one.OneCameraAccessException;
+import com.android.camera.one.OneCameraException;
+import com.android.camera.one.OneCameraManager;
+import com.android.camera.one.OneCameraModule;
 import com.android.camera.util.ApiHelper;
 import com.android.camera.util.Callback;
 import com.android.camera.util.Size;
@@ -334,7 +340,7 @@ public class SettingsUtil {
      */
     private static int getNextSupportedVideoQualityIndex(int cameraId, int start) {
         for (int i = start + 1; i < sVideoQualities.length; ++i) {
-            if (isVideoQualitySupported(sVideoQualities[i])
+            if (isVideoQualitySupported(cameraId, sVideoQualities[i])
                     && CamcorderProfile.hasProfile(cameraId, sVideoQualities[i])) {
                 // We found a new supported quality.
                 return i;
@@ -365,6 +371,59 @@ public class SettingsUtil {
         return true;
     }
 
+    /**
+     * @return Whether the given {@link CamcorderProfile} is supported on the
+     *         current device/OS version.
+     */
+    private static boolean isVideoQualitySupported(int cameraId, int videoQuality) {
+        // 4k is only supported on L or higher but some devices falsely report
+        // to have support for it on K, see b/18172081.
+        if (!ApiHelper.isLOrHigher() && videoQuality == CamcorderProfile.QUALITY_2160P) {
+            return false;
+        }
+
+        OneCameraManager cameraManager;
+        try {
+            cameraManager = OneCameraModule.provideOneCameraManager();
+        } catch (OneCameraException e) {
+            Log.d(TAG, "video quality check failed:  " + e.getMessage());
+            return false;
+        }
+
+        try {
+            CameraId camId = CameraId.from(Integer.toString(cameraId));
+            List<Size> supportedPreviewSizes = (cameraManager.getOneCameraCharacteristics(camId)
+                                .getSupportedPreviewSizes());
+            int height = 0;
+            switch (videoQuality) {
+                case CamcorderProfile.QUALITY_2160P:
+                    height = 2160;
+                    break;
+                case CamcorderProfile.QUALITY_1080P:
+                    height = 1080;
+                    break;
+                case CamcorderProfile.QUALITY_720P:
+                    height = 720;
+                    break;
+                case CamcorderProfile.QUALITY_480P:
+                    height = 480;
+                    break;
+                default:
+                    break;
+            }
+            if (supportedPreviewSizes != null) {
+                for (Size previewSize : supportedPreviewSizes) {
+                    if (previewSize.getHeight() == height) return true;
+                }
+            }
+        } catch (OneCameraAccessException e) {
+            Log.d(TAG, "video quality check failed:  " + e.getMessage());
+            return false;
+        }
+
+        return false;
+    }
+
     /**
      * Returns the index of the size within the given list that is closest to
      * the given target pixel count.
-- 
2.33.0

